// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AdBrixRM",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC8AdBrixRM15AdBrixBase64Key")
@interface AdBrixBase64Key : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8AdBrixRM12AdBrixCommon")
@interface AdBrixCommon : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8AdBrixRM12AdBrixConfig")
@interface AdBrixConfig : NSObject
+ (AdBrixConfig * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8AdBrixRM13AdBrixPrivate")
@interface AdBrixPrivate : NSObject
/// @discussion Objective-C 기반 프로젝트에서 본 함수를 호툴하여 싱글톤 인스턴스 객체를 획득한다
/// @author igaworks
+ (AdBrixPrivate * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSString * _Nonnull)getAppleAdvertisingIdentifierStr SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getAppleAdvertisingTrackingEnable SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8AdBrixRM14AdBrixPurchase")
@interface AdBrixPurchase : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol AdBrixRMDeeplinkDelegate;
@protocol AdBrixRMSDKInitializDoneDelegate;
enum AdBrixLogLevel : NSInteger;
enum AdBrixEventUploadTimeInterval : NSInteger;
enum AdBrixEventUploadCountInterval : NSInteger;
@class AdBrixRmCommerceProductCategoryModel;
@class AdBrixRmCommerceProductModel;
enum AdBrixRmSharingChannel : NSInteger;
enum AdbrixRmPaymentMethod : NSInteger;
enum AdBrixRmSignUpChannel : NSInteger;
enum AdBrixRmInviteChannel : NSInteger;
enum AdBrixRmCurrencyType : NSInteger;
@class AdBrixRmCommerceProductAttrModel;
enum AdBrixGenderType : NSInteger;

/// 클라이언트가 함수 호출, 변수 참조하는 클래스
SWIFT_CLASS_NAMED("AdBrixRM")
@interface AdBrixRM : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull AdBrixDateFormat;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// @discussion Objective-C 기반 프로젝트에서 본 함수를 호툴하여 싱글톤 인스턴스 객체를 획득한다
/// @author igaworks
+ (AdBrixRM * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)gdprForgetMe;
- (BOOL)isGdprForgetMe SWIFT_WARN_UNUSED_RESULT;
- (void)setDeeplinkDelegateWithDelegate:(id <AdBrixRMDeeplinkDelegate> _Nonnull)delegate;
- (void)setInitializeDoneDelegateWithDelegate:(id <AdBrixRMSDKInitializDoneDelegate> _Nonnull)delegate;
/// @discussion 앱 실행시 AppDelegate에서 최초 앱키, 해시키 등의 정보를 입력한다 - 디바이스id는 임의로 생성된다
/// @author igaworks
- (void)initAdBrixWithAppKey:(NSString * _Nonnull)appKey secretKey:(NSString * _Nonnull)secretKey SWIFT_METHOD_FAMILY(none);
/// @discussion 앱 실행시 AppDelegate에서 최초 앱키, 해시키, 디바이스id 등의 정보를 입력한다
/// @author igaworks
- (void)initAdBrixWithAppKey:(NSString * _Nonnull)appKey secretKey:(NSString * _Nonnull)secretKey deviceId:(NSString * _Nonnull)deviceId SWIFT_METHOD_FAMILY(none);
/// @discussion 노출 로그 레벨을 설정한다
/// @author igaworks
- (void)setLogLevel:(enum AdBrixLogLevel)logLevel;
/// 이벤트 전송 주기를 설정한다
- (void)setEventUploadTimeInterval:(enum AdBrixEventUploadTimeInterval)intervalTime;
/// 회당 전송할 이벤트 데이터 수를 설정한다
- (void)setEventUploadCountInterval:(enum AdBrixEventUploadCountInterval)cnt;
/// 광고 Identifier 값을 설정한다
- (void)setAppleAdvertisingIdentifier:(NSString * _Nonnull)appleAdvertisingIdentifier;
/// 로그인 - 본 함수로 라이브옵스, 커머스 공동 사용가능
- (void)loginWithUserId:(NSString * _Nonnull)userId;
/// 로그인 - 본 함수로 라이브옵스, 커머스 공동 사용가능
- (void)loginWithUserId:(NSString * _Nonnull)userId eventDateStr:(NSString * _Nonnull)eventDateStr;
/// 이벤트
- (void)eventWithEventName:(NSString * _Nonnull)eventName;
- (void)eventWithEventName:(NSString * _Nonnull)eventName eventDate:(NSDate * _Nonnull)eventDate;
- (void)eventWithEventName:(NSString * _Nonnull)eventName eventDateMs:(double)eventDateMs;
/// 이벤트
- (void)eventWithEventName:(NSString * _Nonnull)eventName eventDateStr:(NSString * _Nonnull)eventDateStr;
- (void)eventWithEventName:(NSString * _Nonnull)eventName value:(NSDictionary<NSString *, id> * _Nonnull)value;
/// 이벤트 for Unity
- (void)eventForUnityWithEventName:(NSString * _Nonnull)eventName value:(NSDictionary<NSString *, NSString *> * _Nonnull)value;
- (void)eventWithEventName:(NSString * _Nonnull)eventName value:(NSDictionary<NSString *, id> * _Nonnull)value eventDate:(NSDate * _Nonnull)eventDate;
- (void)eventWithEventName:(NSString * _Nonnull)eventName value:(NSDictionary<NSString *, id> * _Nonnull)value eventDateMs:(double)eventDateMs;
/// 이벤트 for Unity
- (void)eventForUnityWithEventName:(NSString * _Nonnull)eventName value:(NSDictionary<NSString *, NSString *> * _Nonnull)value eventDateStr:(NSString * _Nonnull)eventDateStr;
/// 이벤트
- (void)eventWithEventName:(NSString * _Nonnull)eventName value:(NSDictionary<NSString *, id> * _Nonnull)value eventDateStr:(NSString * _Nonnull)eventDateStr;
- (void)commerceViewHome;
/// purchase 홈화면 열기
- (void)commerceViewHomeWithEventDate:(NSDate * _Nonnull)eventDate;
/// purchase 홈화면 열기
- (void)commerceViewHomeWithEventDateMs:(double)eventDateMs;
/// purchase 홈화면 열기
- (void)commerceViewHomeWithEventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 홈화면 열기
- (void)commerceViewHomeWithOrderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 홈화면 열기
- (void)commerceViewHomeWithOrderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 홈화면 열기
- (void)commerceViewHomeWithOrderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 홈화면 열기
- (void)commerceViewHomeWithOrderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 카테고리(기획전) 진입
- (void)commerceCategoryViewWithCategory:(AdBrixRmCommerceProductCategoryModel * _Nonnull)category productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo;
/// purchase 카테고리(기획전) 진입
- (void)commerceCategoryViewWithCategory:(AdBrixRmCommerceProductCategoryModel * _Nonnull)category productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 카테고리(기획전) 진입
- (void)commerceCategoryViewWithCategory:(AdBrixRmCommerceProductCategoryModel * _Nonnull)category productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDateMs:(double)eventDateMs;
/// purchase 카테고리(기획전) 진입
- (void)commerceCategoryViewWithCategory:(AdBrixRmCommerceProductCategoryModel * _Nonnull)category productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 카테고리(기획전) 진입
- (void)commerceCategoryViewWithCategory:(AdBrixRmCommerceProductCategoryModel * _Nonnull)category productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 카테고리(기획전) 진입
- (void)commerceCategoryViewWithCategory:(AdBrixRmCommerceProductCategoryModel * _Nonnull)category productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 카테고리(기획전) 진입
- (void)commerceCategoryViewWithCategory:(AdBrixRmCommerceProductCategoryModel * _Nonnull)category productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 카테고리(기획전) 진입
- (void)commerceCategoryViewWithCategory:(AdBrixRmCommerceProductCategoryModel * _Nonnull)category productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 상품 상세보기
- (void)commerceProductViewWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo;
/// purchase 상품 상세보기
- (void)commerceProductViewWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 상품 상세보기
- (void)commerceProductViewWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo eventDateMs:(double)eventDateMs;
- (void)commerceProductViewWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 상품 상세보기
- (void)commerceProductViewWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 상품 상세보기
- (void)commerceProductViewWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 상품 상세보기
- (void)commerceProductViewWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 상품 상세보기
- (void)commerceProductViewWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 장바구니 담기
- (void)commerceAddToCartWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo;
/// purchase 장바구니 담기
- (void)commerceAddToCartWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 장바구니 담기
- (void)commerceAddToCartWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDateMs:(double)eventDateMs;
/// purchase 장바구니 담기
- (void)commerceAddToCartWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 장바구니 담기
- (void)commerceAddToCartWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 장바구니 담기
- (void)commerceAddToCartWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 장바구니 담기
- (void)commerceAddToCartWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 장바구니 담기
- (void)commerceAddToCartWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 위시리스트(관심상품) 추가
- (void)commerceAddToWishListWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo;
/// purchase 위시리스트(관심상품) 추가
- (void)commerceAddToWishListWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo eventDateMs:(double)eventDateMs;
/// purchase 위시리스트(관심상품) 추가
- (void)commerceAddToWishListWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 위시리스트(관심상품) 추가
- (void)commerceAddToWishListWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 위시리스트(관심상품) 추가
- (void)commerceAddToWishListWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 위시리스트(관심상품) 추가
- (void)commerceAddToWishListWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 위시리스트(관심상품) 추가
- (void)commerceAddToWishListWithProductInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 주문 내역 검토
- (void)commerceReviewOrderWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge;
/// purchase 주문 내역 검토
- (void)commerceReviewOrderWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 주문 내역 검토
- (void)commerceReviewOrderWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 주문 내역 검토
- (void)commerceReviewOrderWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge eventDateMs:(double)eventDateMs;
/// purchase 주문 내역 검토
- (void)commerceReviewOrderWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 주문 내역 검토
- (void)commerceReviewOrderWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 주문 내역 검토
- (void)commerceReviewOrderWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 주문 내역 검토
- (void)commerceReviewOrderWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 주문 취소(환불)
- (void)commerceRefundWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo penaltyCharge:(double)penaltyCharge;
- (void)commerceRefundWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo penaltyCharge:(double)penaltyCharge orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
- (void)commerceRefundWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo penaltyCharge:(double)penaltyCharge eventDate:(NSDate * _Nonnull)eventDate;
- (void)commerceRefundWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo penaltyCharge:(double)penaltyCharge eventDateMs:(double)eventDateMs;
- (void)commerceRefundWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo penaltyCharge:(double)penaltyCharge eventDateStr:(NSString * _Nonnull)eventDateStr;
- (void)commerceRefundWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo penaltyCharge:(double)penaltyCharge orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
- (void)commerceRefundWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo penaltyCharge:(double)penaltyCharge orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
- (void)commerceRefundWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo penaltyCharge:(double)penaltyCharge orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 상품 검색
- (void)commerceSearchWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo keyword:(NSString * _Nonnull)keyword;
/// purchase 상품 검색
- (void)commerceSearchWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo keyword:(NSString * _Nonnull)keyword orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 상품 검색
- (void)commerceSearchWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo keyword:(NSString * _Nonnull)keyword eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 상품 검색
- (void)commerceSearchWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo keyword:(NSString * _Nonnull)keyword eventDateMs:(double)eventDateMs;
/// purchase 상품 검색
- (void)commerceSearchWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo keyword:(NSString * _Nonnull)keyword eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 상품 검색
- (void)commerceSearchWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo keyword:(NSString * _Nonnull)keyword orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 상품 검색
- (void)commerceSearchWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo keyword:(NSString * _Nonnull)keyword orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 상품 검색
- (void)commerceSearchWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo keyword:(NSString * _Nonnull)keyword orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 상품 공유
- (void)commerceShareWithChannel:(enum AdBrixRmSharingChannel)channel productInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo;
/// purchase 상품 공유
- (void)commerceShareWithChannel:(enum AdBrixRmSharingChannel)channel productInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 상품 공유
- (void)commerceShareWithChannel:(enum AdBrixRmSharingChannel)channel productInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 상품 공유
- (void)commerceShareWithChannel:(enum AdBrixRmSharingChannel)channel productInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo eventDateMs:(double)eventDateMs;
/// purchase 상품 공유
- (void)commerceShareWithChannel:(enum AdBrixRmSharingChannel)channel productInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 상품 공유
- (void)commerceShareWithChannel:(enum AdBrixRmSharingChannel)channel productInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 상품 공유
- (void)commerceShareWithChannel:(enum AdBrixRmSharingChannel)channel productInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 상품 공유
- (void)commerceShareWithChannel:(enum AdBrixRmSharingChannel)channel productInfo:(AdBrixRmCommerceProductModel * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 삼품 목록 조회
- (void)commerceListViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo;
/// purchase 삼품 목록 조회
- (void)commerceListViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 삼품 목록 조회
- (void)commerceListViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDateMs:(double)eventDateMs;
/// purchase 삼품 목록 조회
- (void)commerceListViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 삼품 목록 조회
- (void)commerceListViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 삼품 목록 조회
- (void)commerceListViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 삼품 목록 조회
- (void)commerceListViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 삼품 목록 조회
- (void)commerceListViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 장바구니 담기
- (void)commerceCartViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo;
/// purchase 장바구니 담기
- (void)commerceCartViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 장바구니 담기
- (void)commerceCartViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDateMs:(double)eventDateMs;
/// purchase 장바구니 담기
- (void)commerceCartViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 장바구니 담기
- (void)commerceCartViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
/// purchase 장바구니 담기
- (void)commerceCartViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 장바구니 담기
- (void)commerceCartViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
/// purchase 장바구니 담기
- (void)commerceCartViewWithProductInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 구매정보 입력
- (void)commercePaymentInfoAdded;
/// purchase 구매정보 입력
- (void)commercePaymentInfoAddedWithEventDate:(NSDate * _Nonnull)eventDate;
/// purchase 구매정보 입력
- (void)commercePaymentInfoAddedWithEventDateMs:(double)eventDateMs;
/// purchase 구매정보 입력
- (void)commercePaymentInfoAddedWithEventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 구매정보 입력
- (void)commercePaymentInfoAddedWithPaymentInfoAttr:(NSDictionary<NSString *, id> * _Nullable)paymentInfoAttr;
/// purchase 구매정보 입력
- (void)commercePaymentInfoAddedWithPaymentInfoAttr:(NSDictionary<NSString *, id> * _Nullable)paymentInfoAttr eventDate:(NSDate * _Nonnull)eventDate;
/// purchase 구매정보 입력
- (void)commercePaymentInfoAddedWithPaymentInfoAttr:(NSDictionary<NSString *, id> * _Nullable)paymentInfoAttr eventDateMs:(double)eventDateMs;
/// purchase 결제정보 입력
- (void)commercePaymentInfoAddedWithPaymentInfoAttr:(NSDictionary<NSString *, id> * _Nullable)paymentInfoAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// 레벨 달성
- (void)gameLevelAchievedWithLevel:(NSInteger)level;
/// 레벨 달성
- (void)gameLevelAchievedWithLevel:(NSInteger)level gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr;
/// 레벨 달성
- (void)gameLevelAchievedWithLevel:(NSInteger)level eventDate:(NSDate * _Nonnull)eventDate;
/// 레벨 달성
- (void)gameLevelAchievedWithLevel:(NSInteger)level eventDateMs:(double)eventDateMs;
/// 레벨 달성
- (void)gameLevelAchedvedWithLevel:(NSInteger)level eventDateStr:(NSString * _Nonnull)eventDateStr;
/// 레벨 달성
- (void)gameLevelAchedvedWithLevel:(NSInteger)level gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDate:(NSDate * _Nonnull)eventDate;
/// 레벨 달성
- (void)gameLevelAchievedWithLevel:(NSInteger)level gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDateMs:(double)eventDateMs;
/// 레벨 달성
- (void)gameLevelAchievedWithLevel:(NSInteger)level gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// game 튜토리얼 달성
- (void)gameTutorialCompletedWithIsSkip:(BOOL)isSkip;
/// game 튜토리얼 달성
- (void)gameTutorialCompletedWithIsSkip:(BOOL)isSkip gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr;
/// game 튜토리얼 달성
- (void)gameTutorialCompletedWithIsSkip:(BOOL)isSkip eventDate:(NSDate * _Nonnull)eventDate;
/// game 튜토리얼 달성
- (void)gameTutorialCompletedWithIsSkip:(BOOL)isSkip eventDateMs:(double)eventDateMs;
/// game 튜토리얼 달성
- (void)gameTutorialCompletedWithIsSkip:(BOOL)isSkip eventDateStr:(NSString * _Nonnull)eventDateStr;
/// game 튜토리얼 달성
- (void)gameTutorialCompletedWithIsSkip:(BOOL)isSkip gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDate:(NSDate * _Nonnull)eventDate;
/// game 튜토리얼 달성
- (void)gameTutorialCompletedWithIsSkip:(BOOL)isSkip gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDateMs:(double)eventDateMs;
/// game 튜토리얼 달성
- (void)gameTutorialCompletedWithIsSkip:(BOOL)isSkip gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// game 캐릭터 생성
- (void)gameCharacterCreated;
/// game 캐릭터 생성
- (void)gameCharacterCreatedWithGameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr;
/// game 캐릭터 생성
- (void)gameCharacterCreatedWithEventDate:(NSDate * _Nonnull)eventDate;
/// game 캐릭터 생성
- (void)gameCharacterCreatedWithEventDateMs:(double)eventDateMs;
/// game 캐릭터 생성
- (void)gameCharacterCreatedWithEventDateStr:(NSString * _Nonnull)eventDateStr;
/// game 캐릭터 생성
- (void)gameCharacterCreatedWithGameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDate:(NSDate * _Nonnull)eventDate;
/// game 캐릭터 생성
- (void)gameCharacterCreatedWithGameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDateMs:(double)eventDateMs;
/// game 캐릭터 생성
- (void)gameCharacterCreatedWithGameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// game 스테이지 클리어
- (void)gameStageClearedWithStageName:(NSString * _Nonnull)stageName;
/// game 스테이지 클리어
- (void)gameStageClearedWithStageName:(NSString * _Nonnull)stageName gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr;
/// game 스테이지 클리어
- (void)gameStageClearedWithStageName:(NSString * _Nonnull)stageName eventDate:(NSDate * _Nonnull)eventDate;
/// game 스테이지 클리어
- (void)gameStageClearedWithStageName:(NSString * _Nonnull)stageName eventDateMs:(double)eventDateMs;
/// game 스테이지 클리어
- (void)gameStageClearedWithStageName:(NSString * _Nonnull)stageName eventDateStr:(NSString * _Nonnull)eventDateStr;
/// game 스테이지 클리어
- (void)gameStageClearedWithStageName:(NSString * _Nonnull)stageName gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDate:(NSDate * _Nonnull)eventDate;
/// game 스테이지 클리어
- (void)gameStageClearedWithStageName:(NSString * _Nonnull)stageName gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDateMs:(double)eventDateMs;
/// game 스테이지 클리어
- (void)gameStageClearedWithStageName:(NSString * _Nonnull)stageName gameInfoAttr:(NSDictionary<NSString *, id> * _Nullable)gameInfoAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 상품 결제
- (void)commonPurchaseWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge paymentMethod:(enum AdbrixRmPaymentMethod)paymentMethod;
- (void)commonPurchaseWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge paymentMethod:(enum AdbrixRmPaymentMethod)paymentMethod orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr;
- (void)commonPurchaseWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge paymentMethod:(enum AdbrixRmPaymentMethod)paymentMethod eventDate:(NSDate * _Nonnull)eventDate;
- (void)commonPurchaseWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge paymentMethod:(enum AdbrixRmPaymentMethod)paymentMethod eventDateMs:(double)eventDateMs;
- (void)commonPurchaseWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge paymentMethod:(enum AdbrixRmPaymentMethod)paymentMethod eventDateStr:(NSString * _Nonnull)eventDateStr;
- (void)commonPurchaseWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge paymentMethod:(enum AdbrixRmPaymentMethod)paymentMethod orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDate:(NSDate * _Nonnull)eventDate;
- (void)commonPurchaseWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge paymentMethod:(enum AdbrixRmPaymentMethod)paymentMethod orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateMs:(double)eventDateMs;
- (void)commonPurchaseWithOrderId:(NSString * _Nonnull)orderId productInfo:(NSArray<AdBrixRmCommerceProductModel *> * _Nonnull)productInfo discount:(double)discount deliveryCharge:(double)deliveryCharge paymentMethod:(enum AdbrixRmPaymentMethod)paymentMethod orderAttr:(NSDictionary<NSString *, id> * _Nullable)orderAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// common 회원가입
- (void)commonSignUpWithChannel:(enum AdBrixRmSignUpChannel)channel;
/// common 회원가입
- (void)commonSignUpWithChannel:(enum AdBrixRmSignUpChannel)channel commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr;
/// common 회원가입
- (void)commonSignUpWithChannel:(enum AdBrixRmSignUpChannel)channel eventDate:(NSDate * _Nonnull)eventDate;
/// common 회원가입
- (void)commonSignUpWithChannel:(enum AdBrixRmSignUpChannel)channel eventDateMs:(double)eventDateMs;
/// common 회원가입
- (void)commonSignUpWithChannel:(enum AdBrixRmSignUpChannel)channel eventDateStr:(NSString * _Nonnull)eventDateStr;
/// common 회원가입
- (void)commonSignUpWithChannel:(enum AdBrixRmSignUpChannel)channel commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDate:(NSDate * _Nonnull)eventDate;
/// common 회원가입
- (void)commonSignUpWithChannel:(enum AdBrixRmSignUpChannel)channel commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDateMs:(double)eventDateMs;
/// common 회원가입
- (void)commonSignUpWithChannel:(enum AdBrixRmSignUpChannel)channel commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// common 크레딧 사용
- (void)commonUseCredit;
/// common 크레딧 사용
- (void)commonUseCreditWithCommonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr;
/// common 크레딧 사용
- (void)commonUseCreditWithEventDate:(NSDate * _Nonnull)eventDate;
/// common 크레딧 사용
- (void)commonUseCreditWithEventDateMs:(double)eventDateMs;
/// common 크레딧 사용
- (void)commonUseCreditWithEventDateStr:(NSString * _Nonnull)eventDateStr;
/// common 크레딧 사용
- (void)commonUseCreditWithCommonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDate:(NSDate * _Nonnull)eventDate;
/// common 크레딧 사용
- (void)commonUseCreditWithCommonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDateMs:(double)eventDateMs;
/// common 크레딧 사용
- (void)commonUseCreditWithCommonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// common 앱 업데이트
- (void)commonAppUpdateWithPrev_ver:(NSString * _Nonnull)prev_ver curr_ver:(NSString * _Nonnull)curr_ver;
/// common 앱 업데이트
- (void)commonAppUpdateWithPrev_ver:(NSString * _Nonnull)prev_ver curr_ver:(NSString * _Nonnull)curr_ver commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr;
/// common 앱 업데이트
- (void)commonAppUpdateWithPrev_ver:(NSString * _Nonnull)prev_ver curr_ver:(NSString * _Nonnull)curr_ver eventDate:(NSDate * _Nonnull)eventDate;
/// common 앱 업데이트
- (void)commonAppUpdateWithPrev_ver:(NSString * _Nonnull)prev_ver curr_ver:(NSString * _Nonnull)curr_ver eventDateMs:(double)eventDateMs;
/// common 앱 업데이트
- (void)commonAppUpdateWithPrev_ver:(NSString * _Nonnull)prev_ver curr_ver:(NSString * _Nonnull)curr_ver eventDateStr:(NSString * _Nonnull)eventDateStr;
/// common 앱 업데이트
- (void)commonAppUpdateWithPrev_ver:(NSString * _Nonnull)prev_ver curr_ver:(NSString * _Nonnull)curr_ver commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDate:(NSDate * _Nonnull)eventDate;
/// common 앱 업데이트
- (void)commonAppUpdateWithPrev_ver:(NSString * _Nonnull)prev_ver curr_ver:(NSString * _Nonnull)curr_ver commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDateMs:(double)eventDateMs;
/// common 앱 업데이트
- (void)commonAppUpdateWithPrev_ver:(NSString * _Nonnull)prev_ver curr_ver:(NSString * _Nonnull)curr_ver commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// common 친구초대
- (void)commonInviteWithChannel:(enum AdBrixRmInviteChannel)channel;
/// common 친구초대
- (void)commonInviteWithChannel:(enum AdBrixRmInviteChannel)channel commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr;
/// common 친구초대
- (void)commonInviteWithChannel:(enum AdBrixRmInviteChannel)channel eventDate:(NSDate * _Nonnull)eventDate;
/// common 친구초대
- (void)commonInviteWithChannel:(enum AdBrixRmInviteChannel)channel eventDateMs:(double)eventDateMs;
/// common 친구초대
- (void)commonInviteWithChannel:(enum AdBrixRmInviteChannel)channel eventDateStr:(NSString * _Nonnull)eventDateStr;
/// common 친구초대
- (void)commonInviteWithChannel:(enum AdBrixRmInviteChannel)channel commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDate:(NSDate * _Nonnull)eventDate;
/// common 친구초대
- (void)commonInviteWithChannel:(enum AdBrixRmInviteChannel)channel commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDateMs:(double)eventDateMs;
/// common 친구초대
- (void)commonInviteWithChannel:(enum AdBrixRmInviteChannel)channel commonAttr:(NSDictionary<NSString *, id> * _Nullable)commonAttr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// purchase 통화 타입을 반환한다
- (NSString * _Nonnull)getCurrencyStringByAdBrixCurrencyType:(enum AdBrixRmCurrencyType)currency SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCurrencyString:(NSInteger)currency SWIFT_WARN_UNUSED_RESULT;
/// purchase 공유 채널 타입을 반환한다
- (NSString * _Nonnull)getSharingChannelByAdBrixRmSharingChannel:(enum AdBrixRmSharingChannel)channel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSharingChannel:(NSInteger)channel SWIFT_WARN_UNUSED_RESULT;
/// purchase 결제 방법 타입을 반환한다
- (NSString * _Nonnull)getPaymentMethodByAdbrixRmPaymentMethod:(enum AdbrixRmPaymentMethod)method SWIFT_WARN_UNUSED_RESULT;
/// purchase 결제 방법 타입을 반환한다
- (NSString * _Nonnull)getPaymentMethod:(NSInteger)method SWIFT_WARN_UNUSED_RESULT;
/// common의 회원가입 채널 타입을 반환한다
- (NSString * _Nonnull)getSignUpChannelByAdBrixRmSignUpChannel:(enum AdBrixRmSignUpChannel)channel SWIFT_WARN_UNUSED_RESULT;
/// common의 회원가입 채널 타입을 반환한다
- (NSString * _Nonnull)getSignUpChannel:(NSInteger)channel SWIFT_WARN_UNUSED_RESULT;
/// common의 초대 채널 타입을 반환한다
- (NSString * _Nonnull)getInviteChannelByAdBrixRmSignUpChannel:(enum AdBrixRmInviteChannel)channel SWIFT_WARN_UNUSED_RESULT;
/// common의 초대 채널 타입을 반환한다
- (NSString * _Nonnull)getInviteChannel:(NSInteger)channel SWIFT_WARN_UNUSED_RESULT;
- (AdBrixRmCommerceProductCategoryModel * _Nonnull)createCommerceProductCategoryDataByStringsWithCategoryArray:(NSArray<NSString *> * _Nonnull)categoryArray SWIFT_WARN_UNUSED_RESULT;
- (AdBrixRmCommerceProductCategoryModel * _Nonnull)createCommerceProductCategoryDataByArrayWithCategoryArray:(NSArray<NSString *> * _Nonnull)categoryArray SWIFT_WARN_UNUSED_RESULT;
/// purchase Category 모델을 생성한다
- (AdBrixRmCommerceProductCategoryModel * _Nonnull)createCommerceProductCategoryDataWithCategory:(NSString * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
/// purchase Category 모델을 생성한다
- (AdBrixRmCommerceProductCategoryModel * _Nonnull)createCommerceProductCategoryDataWithCategory:(NSString * _Nonnull)category category2:(NSString * _Nonnull)category2 SWIFT_WARN_UNUSED_RESULT;
/// purchase Category 모델을 생성한다
- (AdBrixRmCommerceProductCategoryModel * _Nonnull)createCommerceProductCategoryDataWithCategory:(NSString * _Nonnull)category category2:(NSString * _Nonnull)category2 category3:(NSString * _Nonnull)category3 SWIFT_WARN_UNUSED_RESULT;
/// purchase Category 모델을 생성한다
- (AdBrixRmCommerceProductCategoryModel * _Nonnull)createCommerceProductCategoryDataWithCategory:(NSString * _Nonnull)category category2:(NSString * _Nonnull)category2 category3:(NSString * _Nonnull)category3 category4:(NSString * _Nonnull)category4 SWIFT_WARN_UNUSED_RESULT;
/// purchase Category 모델을 생성한다
- (AdBrixRmCommerceProductCategoryModel * _Nonnull)createCommerceProductCategoryDataWithCategory:(NSString * _Nonnull)category category2:(NSString * _Nonnull)category2 category3:(NSString * _Nonnull)category3 category4:(NSString * _Nonnull)category4 category5:(NSString * _Nonnull)category5 SWIFT_WARN_UNUSED_RESULT;
/// purchase Product 모델을 생성한다
- (AdBrixRmCommerceProductModel * _Nonnull)createCommerceProductDataWithProductId:(NSString * _Nonnull)productId productName:(NSString * _Nonnull)productName price:(double)price quantity:(NSInteger)quantity discount:(double)discount currencyString:(NSString * _Nullable)currencyString category:(AdBrixRmCommerceProductCategoryModel * _Nullable)category productAttrsMap:(AdBrixRmCommerceProductAttrModel * _Nullable)productAttrsMap SWIFT_WARN_UNUSED_RESULT;
/// purchase Product의 어트리뷰트 모델을 생성한다
- (AdBrixRmCommerceProductAttrModel * _Nonnull)createCommerceProductAttrDataWithDictionary:(NSDictionary<NSString *, NSString *> * _Nullable)dictionary SWIFT_WARN_UNUSED_RESULT;
/// deepLinkOpen 이벤트
/// <h1>Example Swift</h1>
/// \code
/// func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {
///     let adBrix = AdBrixRM.getInstance
///     adBrix.deepLinkOpen(urlStr: "data://http://www.adbrix.com?datakey=datavalue")
///
///     return true
/// }
///
/// \endcode<h1>Example ObjC</h1>
/// \code
/// - (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary *)options
/// {
///     AdBrixRM *adBrix = [AdBrixRM sharedInstance];
///     [adBrix deepLinkOpenWithUrlStr:@"data://http://www.adbrix.com?datakey=datavalue"];
///
///     return YES;
/// }
///
/// \endcode<h1>Be careful</h1>
/// <ul>
///   <li>
///     url must able to convert URL Type (if you use invalid URL scheme, will be crushed from your app side)
///   </li>
/// </ul>
- (void)deepLinkOpenWithUrlStr:(NSString * _Nonnull)urlStr;
- (void)deepLinkOpenWithUrlStr:(NSString * _Nonnull)urlStr eventDateStr:(NSString * _Nonnull)eventDateStr;
/// deepLinkOpen 이벤트
/// <h1>Example Swift</h1>
/// \code
/// func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {
///     let adBrix = AdBrixRM.getInstance
///     adBrix.deepLinkOpen(url: url)
///
///     return true
/// }
///
/// \endcode<h1>Example ObjC</h1>
/// \code
/// - (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary *)options
/// {
///     AdBrixRM *adBrix = [AdBrixRM sharedInstance];
///     [adBrix deepLinkOpenWithUrl:url];
///
///     return YES;
/// }
///
/// \endcode<h1>Be careful</h1>
/// <ul>
///   <li>
///     url must use valid URL Type (if you use invalid URL scheme, will be crushed from your app side)
///   </li>
/// </ul>
- (void)deepLinkOpenWithUrl:(NSURL * _Nonnull)url;
- (void)deepLinkOpenWithUrl:(NSURL * _Nonnull)url eventDateStr:(NSString * _Nonnull)eventDateStr;
/// 사용자의 GPS 위치를 설정한다
- (void)setLocationWithLatitude:(double)latitude longitude:(double)longitude;
/// <ul>
///   <li>
///     API 명칭 : setAge API
///   </li>
///   <li>
///     목적 : 유저정보 분석(User Info)는 유저의 나이정보를 분석할 수 있습니다.
///   </li>
///   <li>
///     특징 : 연령 및 성별 외 디바이스 모델, 통신사, 안드로이드 OS, 언어, 국가 등의 정보는 IGAW 공통 연동을 통해서 기본 제공 됩니다.
///   </li>
/// </ul>
/// 유저 나이
/// setAge API를 호출하여 유저 나이를 입력합니다. 유저 나이는 1~99까지의 정수를 입력합니다.
- (void)setAgeWithInt:(NSInteger)int_;
/// <ul>
///   <li>
///     API 명칭 : setGender API
///   </li>
///   <li>
///     목적 : 유저정보 분석(User Info)는 유저의 성별 정보를 분석할 수 있습니다.
///   </li>
///   <li>
///     특징 : 연령 및 성별 외 디바이스 모델, 통신사, 안드로이드 OS, 언어, 국가 등의 정보는 IGAW 공통 연동을 통해서 기본 제공 됩니다.
///   </li>
/// </ul>
/// 유저 성별
/// setGender API를 호출하여 유저 성별을 입력합니다. 유저 성별은 AdBrixRM.AdBrixGender 에 정의된 Gender enum 값을 사용합니다.
- (void)setGenderWithAdBrixGenderType:(enum AdBrixGenderType)adBrixGenderType;
/// <ul>
///   <li>
///     API 명칭 : clearUserProperties API
///   </li>
/// </ul>
/// 유저 구분(프로퍼티)값들을 초기화
- (void)clearUserProperties;
/// <ul>
///   <li>
///     API 명칭 : setUserProperties API
///   </li>
/// </ul>
/// 유저 구분(프로퍼티)값을 임의의 원하는 정보로 설정
- (void)setUserPropertiesWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// <ul>
///   <li>
///     API 명칭 : setUserProperties API for Unity
///   </li>
/// </ul>
/// 유저 구분(프로퍼티)값을 임의의 원하는 정보로 설정
- (void)setUserPropertiesForUnityWithDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary;
/// <ul>
///   <li>
///     API 명칭 : getUserProperties API
///   </li>
/// </ul>
/// 유저 구분(프로퍼티)값을 반환한다
- (NSDictionary<NSString *, id> * _Nullable)getUserProperties SWIFT_WARN_UNUSED_RESULT;
- (void)setPushEnableToPushEnable:(BOOL)toPushEnable;
- (void)setRegistrationIdWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)setRegistrationIdForUnityWithDeviceToken:(NSString * _Nonnull)deviceToken;
/// <ul>
///   <li>
///     API 명칭 : convertChannel API
///   </li>
/// </ul>
/// int형 code 값으로 AdBrixRmSharingChannel값을 반환한다
- (enum AdBrixRmSharingChannel)convertChannel:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     API 명칭 : convertSignUpChannel API
///   </li>
/// </ul>
/// int형 code 값으로 AdBrixRmSignUpChannel값을 반환한다
- (enum AdBrixRmSignUpChannel)convertSignUpChannel:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     API 명칭 : convertInviteChannel API
///   </li>
/// </ul>
/// int형 code 값으로 AdBrixRmInviteChannel값을 반환한다
- (enum AdBrixRmInviteChannel)convertInviteChannel:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     API 명칭 : convertPayment API
///   </li>
/// </ul>
/// int형 code 값으로 AdbrixRmPaymentMethod값을 반환한다
- (enum AdbrixRmPaymentMethod)convertPayment:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     API 명칭 : convertGender API
///   </li>
/// </ul>
/// int형 code 값으로 AdBrixGenderType값을 반환한다
- (enum AdBrixGenderType)convertGender:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     API 명칭 : convertLogLevel API
///   </li>
/// </ul>
/// int형 code 값으로 AdBrixLogLevel값을 반환한다
- (enum AdBrixLogLevel)convertLogLevel:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     API 명칭 : convertTimeInterval API
///   </li>
/// </ul>
/// int형 code 값으로 AdBrixEventUploadTimeInterval값을 반환한다
- (enum AdBrixEventUploadTimeInterval)convertTimeInterval:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     API 명칭 : convertCountInterval API
///   </li>
/// </ul>
/// int형 code 값으로 AdBrixEventUploadCountInterval값을 반환한다
- (enum AdBrixEventUploadCountInterval)convertCountInterval:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, AdBrixLogLevel, closed) {
  AdBrixLogLevelNONE = 0,
  AdBrixLogLevelTRACE = 1,
  AdBrixLogLevelDEBUG = 2,
  AdBrixLogLevelINFO = 3,
  AdBrixLogLevelWARNING = 4,
  AdBrixLogLevelERROR = 5,
};

/// 이벤트 전송 갯수를 설정 enum값
typedef SWIFT_ENUM(NSInteger, AdBrixEventUploadCountInterval, closed) {
  AdBrixEventUploadCountIntervalMIN = 10,
  AdBrixEventUploadCountIntervalNORMAL = 30,
  AdBrixEventUploadCountIntervalMAX = 1000,
};

/// 이벤트 전송 주기를 설정 enum값
typedef SWIFT_ENUM(NSInteger, AdBrixEventUploadTimeInterval, closed) {
  AdBrixEventUploadTimeIntervalMIN = 30,
  AdBrixEventUploadTimeIntervalNORMAL = 60,
  AdBrixEventUploadTimeIntervalMAX = 120,
};

/// 유저 프로퍼티 기본 키 enum
typedef SWIFT_ENUM(NSInteger, AdBrixUserPropKey, closed) {
  AdBrixUserPropKeyAGE = 0,
  AdBrixUserPropKeyGENDER = 1,
};

/// 커머스 공유 채널
typedef SWIFT_ENUM(NSInteger, AdBrixRmSharingChannel, closed) {
  AdBrixRmSharingChannelAdBrixRmSharingFacebook = 1,
  AdBrixRmSharingChannelAdBrixRmSharingKakaoTalk = 2,
  AdBrixRmSharingChannelAdBrixRmSharingKakaoStory = 3,
  AdBrixRmSharingChannelAdBrixRmSharingLine = 4,
  AdBrixRmSharingChannelAdBrixRmSharingWhatsApp = 5,
  AdBrixRmSharingChannelAdBrixRmSharingQQ = 6,
  AdBrixRmSharingChannelAdBrixRmSharingWeChat = 7,
  AdBrixRmSharingChannelAdBrixRmSharingSMS = 8,
  AdBrixRmSharingChannelAdBrixRmSharingEmail = 9,
  AdBrixRmSharingChannelAdBrixRmSharingCopyUrl = 10,
  AdBrixRmSharingChannelAdBrixRmSharingETC = 11,
};

/// 회원가입 유형
typedef SWIFT_ENUM(NSInteger, AdBrixRmSignUpChannel, closed) {
  AdBrixRmSignUpChannelAdBrixRmSignUpKakaoChannel = 1,
  AdBrixRmSignUpChannelAdBrixRmSignUpNaverChannel = 2,
  AdBrixRmSignUpChannelAdBrixRmSignUpLineChannel = 3,
  AdBrixRmSignUpChannelAdBrixRmSignUpGoogleChannel = 4,
  AdBrixRmSignUpChannelAdBrixRmSignUpFacebookChannel = 5,
  AdBrixRmSignUpChannelAdBrixRmSignUpTwitterChannel = 6,
  AdBrixRmSignUpChannelAdBrixRmSignUpWhatsAppChannel = 7,
  AdBrixRmSignUpChannelAdBrixRmSignUpQQChannel = 8,
  AdBrixRmSignUpChannelAdBrixRmSignUpWeChatChannel = 9,
  AdBrixRmSignUpChannelAdBrixRmSignUpUserIdChannel = 10,
  AdBrixRmSignUpChannelAdBrixRmSignUpETCChannel = 11,
};

/// 초대 유형
typedef SWIFT_ENUM(NSInteger, AdBrixRmInviteChannel, closed) {
  AdBrixRmInviteChannelAdBrixRmInviteKakaoChannel = 1,
  AdBrixRmInviteChannelAdBrixRmInviteNaverChannel = 2,
  AdBrixRmInviteChannelAdBrixRmInviteLineChannel = 3,
  AdBrixRmInviteChannelAdBrixRmInviteGoogleChannel = 4,
  AdBrixRmInviteChannelAdBrixRmInviteFacebookChannel = 5,
  AdBrixRmInviteChannelAdBrixRmInviteTwitterChannel = 6,
  AdBrixRmInviteChannelAdBrixRmInviteWhatsAppChannel = 7,
  AdBrixRmInviteChannelAdBrixRmInviteQQChannel = 8,
  AdBrixRmInviteChannelAdBrixRmInviteWeChatChannel = 9,
  AdBrixRmInviteChannelAdBrixRmInviteETCChannel = 10,
};

/// 유저 프로퍼티 성별
typedef SWIFT_ENUM(NSInteger, AdBrixGenderType, closed) {
  AdBrixGenderTypeMale = 2,
  AdBrixGenderTypeFemale = 1,
  AdBrixGenderTypeUnknown = 0,
};

/// 커머스 결제 통화
typedef SWIFT_ENUM(NSInteger, AdBrixRmCurrencyType, closed) {
  AdBrixRmCurrencyTypeKRW = 1,
  AdBrixRmCurrencyTypeUSD = 2,
  AdBrixRmCurrencyTypeJPY = 3,
  AdBrixRmCurrencyTypeEUR = 4,
  AdBrixRmCurrencyTypeGBP = 5,
  AdBrixRmCurrencyTypeCNY = 6,
  AdBrixRmCurrencyTypeTWD = 7,
  AdBrixRmCurrencyTypeHKD = 8,
  AdBrixRmCurrencyTypeIDR = 9,
  AdBrixRmCurrencyTypeINR = 10,
  AdBrixRmCurrencyTypeRUB = 11,
  AdBrixRmCurrencyTypeTHB = 12,
  AdBrixRmCurrencyTypeVND = 13,
  AdBrixRmCurrencyTypeMYR = 14,
};

/// 커머스 결제 수단
typedef SWIFT_ENUM(NSInteger, AdbrixRmPaymentMethod, closed) {
  AdbrixRmPaymentMethodCreditCard = 1,
  AdbrixRmPaymentMethodBankTransfer = 2,
  AdbrixRmPaymentMethodMobilePayment = 3,
  AdbrixRmPaymentMethodETC = 4,
};


SWIFT_PROTOCOL("_TtP8AdBrixRM24AdBrixRMDeeplinkDelegate_")
@protocol AdBrixRMDeeplinkDelegate
- (void)didReceiveDeeplinkWithDeeplink:(NSString * _Nonnull)deeplink;
@end


SWIFT_PROTOCOL("_TtP8AdBrixRM32AdBrixRMSDKInitializDoneDelegate_")
@protocol AdBrixRMSDKInitializDoneDelegate
- (void)initializeDoneWithDone:(BOOL)done errorStr:(NSString * _Nullable)errorStr;
@end


/// 본 모델은 AdBrix가 설정한다
SWIFT_CLASS("_TtC8AdBrixRM32AdBrixRmCommerceProductAttrModel")
@interface AdBrixRmCommerceProductAttrModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (AdBrixRmCommerceProductAttrModel * _Nonnull)setModelWithDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8AdBrixRM36AdBrixRmCommerceProductCategoryModel")
@interface AdBrixRmCommerceProductCategoryModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (AdBrixRmCommerceProductCategoryModel * _Nonnull)setModelWithCategoryArr:(NSArray<NSString *> * _Nonnull)categoryArr SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8AdBrixRM28AdBrixRmCommerceProductModel")
@interface AdBrixRmCommerceProductModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (AdBrixRmCommerceProductModel * _Nonnull)setModelWithProductId:(NSString * _Nonnull)productId productName:(NSString * _Nonnull)productName price:(double)price quantity:(NSInteger)quantity discount:(double)discount currencyString:(NSString * _Nullable)currencyString categories:(AdBrixRmCommerceProductCategoryModel * _Nullable)categories productAttrsMap:(AdBrixRmCommerceProductAttrModel * _Nullable)productAttrsMap SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8AdBrixRM16AdBrixUserConfig")
@interface AdBrixUserConfig : NSObject
+ (AdBrixUserConfig * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
